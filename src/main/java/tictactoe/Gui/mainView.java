/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tictactoe.Gui;

import org.apache.commons.lang3.tuple.Pair;
import tictactoe.TicTacToe;

import javax.swing.*;
import java.awt.*;

/**
 *
 * @author Rinoier
 */
public class mainView extends javax.swing.JFrame {

    /**
     * Creates GUI frame
     */
    public mainView() {
        initComponents();
//        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    /**
    * setup for modern Nimbus LookAndFeelInfo
    */
    private static void setUpStyle()
    {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }    
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelBoard = new javax.swing.JPanel();
        PanelInfo = new javax.swing.JPanel();
        PlayerTurnLabel = new javax.swing.JLabel();
        TurnsSizeLabel = new javax.swing.JLabel();
        RestartButton = new javax.swing.JButton();
        HelpButton = new javax.swing.JButton();
        QuitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TIC-TAC-TOE GAME");
        setPreferredSize(new java.awt.Dimension(750, 250));
        setSize(new java.awt.Dimension(0, 0));

        PanelBoard.setLayout(new java.awt.GridLayout(5, 5));
        getContentPane().add(PanelBoard, java.awt.BorderLayout.CENTER);

        PanelInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));
        PanelInfo.setMinimumSize(new java.awt.Dimension(200, 115));
        PanelInfo.setLayout(new java.awt.GridLayout(0, 1));

        PlayerTurnLabel.setText("PLAYER TURN : ");
        PlayerTurnLabel.setPreferredSize(new java.awt.Dimension(300, 14));
        PanelInfo.add(PlayerTurnLabel);

        TurnsSizeLabel.setText("TURNS SIZE    :");
        PanelInfo.add(TurnsSizeLabel);

        RestartButton.setText("Restart Game");
        RestartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestartButtonActionPerformed(evt);
            }
        });
        PanelInfo.add(RestartButton);

        HelpButton.setText("Help");
        HelpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HelpButtonActionPerformed(evt);
            }
        });
        PanelInfo.add(HelpButton);

        QuitButton.setText("Quit");
        QuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitButtonActionPerformed(evt);
            }
        });
        PanelInfo.add(QuitButton);

        getContentPane().add(PanelInfo, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HelpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HelpButtonActionPerformed
        JOptionPane.showMessageDialog(null, 
                        "Tic-tac-toe (American English),\n"
                        + " noughts and crosses (British English) or Xs and Os,\n"
                        + " is a paper-and-pencil game for two players,\n"
                        + " X and O, who take turns marking the spaces in\n"
                        + "a ColumnxRow grid.The player who succeeds in placing\n"
                        + " all their marks in a horizontal, vertical, \n"
                        + "or diagonal row wins the game."
                , "InfoBox Help"
                , JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_HelpButtonActionPerformed

    /**
     * Exit Normally
     */
    private void QuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitButtonActionPerformed
        System.exit(0);        
    }//GEN-LAST:event_QuitButtonActionPerformed

    private void RestartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestartButtonActionPerformed
        TicTacToe.restart();        
    }//GEN-LAST:event_RestartButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HelpButton;
    public javax.swing.JPanel PanelBoard;
    private javax.swing.JPanel PanelInfo;
    private javax.swing.JLabel PlayerTurnLabel;
    private javax.swing.JButton QuitButton;
    private javax.swing.JButton RestartButton;
    private javax.swing.JLabel TurnsSizeLabel;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Show who to play
     */

    public void ShowPlayerTurn(String Player) {
        PlayerTurnLabel.setText("PLAYER TURN : "+ Player);                    
    }

    /**
     * Show how much turns passed
     */
    public void ShowTurnSize(int Turns) {
        TurnsSizeLabel.setText("TURNS SIZE   : "+ Turns);                    
    }
    
    /**
     * Showing information in simple JoptionPane
     */
    public static void infoBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null
                , infoMessage
                , "INFOBOX : " + titleBar,
                JOptionPane.INFORMATION_MESSAGE);
    }    

    /**
     * Show error information
     */
    public static void invalidBox(String infoMessage, String titleBar)
    {
        JOptionPane.showMessageDialog(null
                , "INVALID INPUT FROM : "+infoMessage 
                , "INFOBOX : " + titleBar,
                JOptionPane.ERROR_MESSAGE);
    }    

    /**
     * Set look and feel
     * and retrieve user preference in how much Grid size two create 
     * in Tic-Tac-Toe game preference in how much Grid size
     * @return int
     * grid size
     */
    public static Pair<Integer, Integer> TicTacToeBox(int BOARD_SIZE)
    {
        setUpStyle();

        SpinnerNumberModel sModel = new SpinnerNumberModel(BOARD_SIZE, 3, 20, 1);
        String[] difficultyStrings = { "No BOT", "Easy", "Moderate", "Hard", "Insane" };

        JPanel myPanel = new JPanel();
        JSpinner spinner = new JSpinner(sModel);
        JComboBox difficultyOptions = new JComboBox(difficultyStrings);
        GridLayout layout = new GridLayout(2,0);

        myPanel.setLayout(layout);
        myPanel.add(new JLabel("INPUT TICTACTOE GRID SIZE = "));
        myPanel.add(spinner);
        myPanel.add(new JLabel("BOT ENABLED = "));
        myPanel.add(difficultyOptions);

        difficultyOptions.setSelectedIndex(1);
        JOptionPane.showMessageDialog(null, myPanel, "INPUT TICTACTOE GRID SIZE", JOptionPane.QUESTION_MESSAGE);

        int value = (int) spinner.getValue();
        Pair<Integer,Integer> selected = Pair.of(value,difficultyOptions.getSelectedIndex());
        return selected;
    }    
        
    /**
     * Show information  box to ask player if they want to play again
     * @return boolean
     * user answer to play again
     */
    public static boolean askRestartBox(String infoMessage, String titleBar)
    {
        int restart = JOptionPane.showConfirmDialog(null
                , infoMessage 
                , "INFOBOX : " + titleBar
                , JOptionPane.OK_CANCEL_OPTION
                , JOptionPane.INFORMATION_MESSAGE
        );
        if (restart == JOptionPane.YES_OPTION)
            return true;
        else
            return false;
    }    
    
}
